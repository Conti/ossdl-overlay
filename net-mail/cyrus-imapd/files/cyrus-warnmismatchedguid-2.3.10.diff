Warn on mismatched GUID instead of overwriting

This is part of our "make replication safe" initiative which you
can read more about here:

http://lists.andrew.cmu.edu/pipermail/cyrus-devel/2007-October/000525.html

In particular, this one addresses point (a):

a) MUST never lose a message that's been accepted for 
   delivery except in the case of total drive failure.

By making sure we don't overwrite a message delivered when the now
replica machine was the master but not yet replicated.

Index: cyrus-imapd-2.3.12rc1/imap/sync_client.c
===================================================================
--- cyrus-imapd-2.3.12rc1.orig/imap/sync_client.c	2008-04-09 07:48:03.000000000 -0400
+++ cyrus-imapd-2.3.12rc1/imap/sync_client.c	2008-04-09 07:52:18.000000000 -0400
@@ -253,11 +253,15 @@ static int find_reserve_messages(struct 
         while (msg && (record.uid > msg->uid))
             msg = msg->next;
 
-        if (msg && (record.uid == msg->uid) &&
-            message_guid_compare_allow_null(&record.guid, &msg->guid)) {
-            msg = msg->next;  /* Ignore exact match */
-            continue;
-        }
+	if (msg && (record.uid == msg->uid)) {
+	    if (!message_guid_compare_allow_null(&record.guid, &msg->guid)) {
+		syslog(LOG_NOTICE,
+		       "GUID MISMATCH: %lu of %s: %m",
+		       record.uid, mailbox->name);
+	    }
+	    msg = msg->next;  /* Ignore exact match */
+	    continue;
+	}
 
         /* Want to upload this message; does the server have a copy? */
         if (sync_msgid_lookup(server_msgid_list, &record.guid))
@@ -1210,11 +1214,15 @@ static int check_upload_messages(struct 
         while (msg && (record.uid > msg->uid))
             msg = msg->next;
 
-        if (msg && (record.uid == msg->uid) &&
-            message_guid_compare_allow_null(&record.guid, &msg->guid)) {
-            msg = msg->next;  /* Ignore exact match */
-            continue;
-        }
+	if (msg && (record.uid == msg->uid)) {
+	    if (!message_guid_compare_allow_null(&record.guid, &msg->guid)) {
+		syslog(LOG_NOTICE,
+		       "GUID MISMATCH: %lu of %s: %m",
+		       record.uid, mailbox->name);
+	    }
+	    msg = msg->next;  /* Ignore exact match */
+	    continue;
+	}
 
         /* Found a message on the client which doesn't exist on the server */
         return(1);
@@ -1403,8 +1411,12 @@ static int upload_messages_list(struct m
 	    while (msg && (record.uid > msg->uid))
 		msg = msg->next;
 
-	    if (msg && (record.uid == msg->uid) &&
-		message_guid_compare_allow_null(&record.guid, &msg->guid)) {
+	    if (msg && (record.uid == msg->uid)) {
+	        if (!message_guid_compare_allow_null(&record.guid, &msg->guid)) {
+		    syslog(LOG_NOTICE,
+			   "GUID MISMATCH: %lu of %s: %m",
+			   record.uid, mailbox->name);
+		}
 		msg = msg->next;  /* Ignore exact match */
 		continue;
 	    }
