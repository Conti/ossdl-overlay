diff --git a/benchtests/bench-strcpy_chk.c b/benchtests/bench-strcpy_chk.c
index 8accb61..828c9bc 100644
--- a/benchtests/bench-strcpy_chk.c
+++ b/benchtests/bench-strcpy_chk.c
@@ -53,6 +53,9 @@ simple_strcpy_chk (char *dst, const char *src, size_t len)
 #include <setjmp.h>
 #include <signal.h>
 
+static int test_main (void);
+#include "../test-skeleton.c"
+
 volatile int chk_fail_ok;
 jmp_buf chk_fail_buf;
 
@@ -156,28 +159,12 @@ do_test (size_t align1, size_t align2, size_t len, size_t dlen, int max_char)
     putchar ('\n');
 }
 
-int
+static int
 test_main (void)
 {
   size_t i;
 
-  struct sigaction sa;
-  sa.sa_handler = handler;
-  sa.sa_flags = 0;
-  sigemptyset (&sa.sa_mask);
-
-  sigaction (SIGABRT, &sa, NULL);
-
-  /* Avoid all the buffer overflow messages on stderr.  */
-  int fd = open (_PATH_DEVNULL, O_WRONLY);
-  if (fd == -1)
-    close (STDERR_FILENO);
-  else
-    {
-      dup2 (fd, STDERR_FILENO);
-      close (fd);
-    }
-  setenv ("LIBC_FATAL_STDERR_", "1", 1);
+  set_fortify_handler (handler);
 
   test_init ();
 
@@ -254,5 +241,3 @@ test_main (void)
 
   return 0;
 }
-
-#include "../test-skeleton.c"
diff --git a/debug/Makefile b/debug/Makefile
index ab06c17..fc15ef3 100644
--- a/debug/Makefile
+++ b/debug/Makefile
@@ -90,6 +90,8 @@ CFLAGS-tst-longjmp_chk.c = -fexceptions -fasynchronous-unwind-tables
 CPPFLAGS-tst-longjmp_chk.c = -D_FORTIFY_SOURCE=1
 CFLAGS-tst-longjmp_chk2.c = -fexceptions -fasynchronous-unwind-tables
 CPPFLAGS-tst-longjmp_chk2.c = -D_FORTIFY_SOURCE=1
+CFLAGS-tst-longjmp_chk3.c = -fexceptions -fasynchronous-unwind-tables
+CPPFLAGS-tst-longjmp_chk3.c = -D_FORTIFY_SOURCE=1
 
 # We know these tests have problems with format strings, this is what
 # we are testing.  Disable that warning.
diff --git a/debug/test-strcpy_chk.c b/debug/test-strcpy_chk.c
index 62a581d..0e683be 100644
--- a/debug/test-strcpy_chk.c
+++ b/debug/test-strcpy_chk.c
@@ -54,6 +54,10 @@ simple_strcpy_chk (char *dst, const char *src, size_t len)
 #include <setjmp.h>
 #include <signal.h>
 
+static int test_main (void);
+#define TEST_FUNCTION test_main ()
+#include "../test-skeleton.c"
+
 volatile int chk_fail_ok;
 jmp_buf chk_fail_buf;
 
@@ -266,28 +270,12 @@ Iteration %zd - different strings, %s (%zd, %zd, %zd)\n",
     }
 }
 
-int
+static int
 test_main (void)
 {
   size_t i;
 
-  struct sigaction sa;
-  sa.sa_handler = handler;
-  sa.sa_flags = 0;
-  sigemptyset (&sa.sa_mask);
-
-  sigaction (SIGABRT, &sa, NULL);
-
-  /* Avoid all the buffer overflow messages on stderr.  */
-  int fd = open (_PATH_DEVNULL, O_WRONLY);
-  if (fd == -1)
-    close (STDERR_FILENO);
-  else
-    {
-      dup2 (fd, STDERR_FILENO);
-      close (fd);
-    }
-  setenv ("LIBC_FATAL_STDERR_", "1", 1);
+  set_fortify_handler (handler);
 
   test_init ();
 
@@ -365,5 +353,3 @@ test_main (void)
   do_random_tests ();
   return ret;
 }
-
-#include "../test-skeleton.c"
diff --git a/debug/tst-backtrace4.c b/debug/tst-backtrace4.c
index a98775a..26fbdd0 100644
--- a/debug/tst-backtrace4.c
+++ b/debug/tst-backtrace4.c
@@ -49,12 +49,16 @@ handle_signal (int signum)
 
   /* Get the backtrace addresses.  */
   n = backtrace (addresses, sizeof (addresses) / sizeof (addresses[0]));
-  printf ("Obtained backtrace with %d functions\n", n);
-  /*  Check that there are at least six functions.  */
+  printf ("Obtained backtrace with %d functions (but wanted at least %d)\n",
+	  n, NUM_FUNCTIONS);
+  /* Check that there are at least six functions.  */
   if (n < NUM_FUNCTIONS)
     {
       FAIL ();
-      return;
+      /* Only return if we got no symbols at all.  The partial output is
+	 still useful for debugging failures.  */
+      if (n <= 0)
+	return;
     }
   /* Convert them to symbols.  */
   symbols = backtrace_symbols (addresses, n);
@@ -68,10 +72,7 @@ handle_signal (int signum)
     printf ("Function %d: %s\n", i, symbols[i]);
   /* Check that the function names obtained are accurate.  */
   if (!match (symbols[0], "handle_signal"))
-    {
-      FAIL ();
-      return;
-    }
+    FAIL ();
   /* Do not check name for signal trampoline.  */
   for (i = 2; i < n - 1; i++)
     if (!match (symbols[i], "fn"))
diff --git a/debug/tst-chk1.c b/debug/tst-chk1.c
index f0b86a0..3393153 100644
--- a/debug/tst-chk1.c
+++ b/debug/tst-chk1.c
@@ -20,7 +20,6 @@
 #include <fcntl.h>
 #include <locale.h>
 #include <obstack.h>
-#include <paths.h>
 #include <setjmp.h>
 #include <signal.h>
 #include <stdio.h>
@@ -119,23 +118,7 @@ int num2 = 987654;
 static int
 do_test (void)
 {
-  struct sigaction sa;
-  sa.sa_handler = handler;
-  sa.sa_flags = 0;
-  sigemptyset (&sa.sa_mask);
-
-  sigaction (SIGABRT, &sa, NULL);
-
-  /* Avoid all the buffer overflow messages on stderr.  */
-  int fd = open (_PATH_DEVNULL, O_WRONLY);
-  if (fd == -1)
-    close (STDERR_FILENO);
-  else
-    {
-      dup2 (fd, STDERR_FILENO);
-      close (fd);
-    }
-  setenv ("LIBC_FATAL_STDERR_", "1", 1);
+  set_fortify_handler (handler);
 
   struct A { char buf1[9]; char buf2[1]; } a;
   struct wA { wchar_t buf1[9]; wchar_t buf2[1]; } wa;
@@ -1366,7 +1349,7 @@ do_test (void)
       ret = 1;
     }
 
-  fd = posix_openpt (O_RDWR);
+  int fd = posix_openpt (O_RDWR);
   if (fd != -1)
     {
       char enough[1000];
diff --git a/debug/tst-longjmp_chk.c b/debug/tst-longjmp_chk.c
index 8892974..e4e93d2 100644
--- a/debug/tst-longjmp_chk.c
+++ b/debug/tst-longjmp_chk.c
@@ -1,3 +1,5 @@
+/* Basic test to make sure doing a longjmp to a jmpbuf with an invalid sp
+   is caught by the fortification code.  */
 #include <errno.h>
 #include <fcntl.h>
 #include <paths.h>
@@ -8,6 +10,12 @@
 #include <stdlib.h>
 #include <unistd.h>
 
+
+static int do_test(void);
+#define TEST_FUNCTION do_test ()
+#include "../test-skeleton.c"
+
+
 static jmp_buf b;
 
 
@@ -43,26 +51,10 @@ handler (int sig)
 }
 
 
-int
-main (void)
+static int
+do_test (void)
 {
-  struct sigaction sa;
-  sa.sa_handler = handler;
-  sa.sa_flags = 0;
-  sigemptyset (&sa.sa_mask);
-
-  sigaction (SIGABRT, &sa, NULL);
-
-  /* Avoid all the buffer overflow messages on stderr.  */
-  int fd = open (_PATH_DEVNULL, O_WRONLY);
-  if (fd == -1)
-    close (STDERR_FILENO);
-  else
-    {
-      dup2 (fd, STDERR_FILENO);
-      close (fd);
-    }
-  setenv ("LIBC_FATAL_STDERR_", "1", 1);
+  set_fortify_handler (handler);
 
 
   expected_to_fail = false;
diff --git a/debug/tst-longjmp_chk3.c b/debug/tst-longjmp_chk3.c
new file mode 100644
index 0000000..f0f67e5
--- /dev/null
+++ b/debug/tst-longjmp_chk3.c
@@ -0,0 +1,85 @@
+/* Make sure longjmp fortification catches bad signal stacks.
+   Copyright (C) 2013-2014 Free Software Foundation, Inc.
+   This file is part of the GNU C Library.
+
+   The GNU C Library is free software; you can redistribute it and/or
+   modify it under the terms of the GNU Lesser General Public
+   License as published by the Free Software Foundation; either
+   version 2.1 of the License, or (at your option) any later version.
+
+   The GNU C Library is distributed in the hope that it will be useful,
+   but WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+   Lesser General Public License for more details.
+
+   You should have received a copy of the GNU Lesser General Public
+   License along with the GNU C Library; if not, see
+   <http://www.gnu.org/licenses/>.  */
+
+#include <setjmp.h>
+#include <signal.h>
+#include <string.h>
+
+static int do_test (void);
+#define TEST_FUNCTION do_test ()
+#include "../test-skeleton.c"
+
+static char buf[SIGSTKSZ * 4];
+static jmp_buf jb;
+
+static void
+handler (int sig)
+{
+  if (sig == SIGUSR1)
+    {
+      if (setjmp (jb) != 0)
+	{
+	  puts ("setjmp should not have been called");
+	  kill (getpid (), SIGTERM);
+	}
+    }
+  else if (sig == SIGABRT)
+    {
+      /* Yeah it worked.  */
+      _exit (0);
+    }
+}
+
+static int
+do_test (void)
+{
+  stack_t ss;
+
+  set_fortify_handler (handler);
+
+  /* Create a valid signal stack and enable it.  */
+  ss.ss_sp = buf;
+  ss.ss_size = sizeof (buf);
+  ss.ss_flags = 0;
+  if (sigaltstack (&ss, NULL) < 0)
+    {
+      printf ("first sigaltstack failed: %m\n");
+      return 1;
+    }
+
+  /* Trigger the signal handler which will create a jmpbuf that points to the
+     end of the signal stack.  */
+  signal (SIGUSR1, handler);
+  kill (getpid (), SIGUSR1);
+
+  /* Shrink the signal stack so the jmpbuf is now invalid.
+     We adjust the start & end to handle stacks that grow up & down.  */
+  ss.ss_sp = buf + sizeof (buf) / 2;
+  ss.ss_size = sizeof (buf) / 4;
+  if (sigaltstack (&ss, NULL) < 0)
+    {
+      printf ("second sigaltstack failed: %m\n");
+      return 1;
+    }
+
+  /* This should fail.  */
+  longjmp (jb, 1);
+
+  puts ("longjmp returned and shouldn't");
+  return 1;
+}
diff --git a/manual/setjmp.texi b/manual/setjmp.texi
index b924d58..3bef1b1 100644
--- a/manual/setjmp.texi
+++ b/manual/setjmp.texi
@@ -262,7 +262,7 @@ declared respectively in the @file{ucontext.h} header file.
 @comment SVID
 @deftp {Data Type} ucontext_t
 
-The @code{ucontext_t} type is defined as a structure with as least the
+The @code{ucontext_t} type is defined as a structure with at least the
 following elements:
 
 @table @code
@@ -309,14 +309,14 @@ The function returns @code{0} if successful.  Otherwise it returns
 The @code{getcontext} function is similar to @code{setjmp} but it does
 not provide an indication of whether the function returns for the first
 time or whether the initialized context was used and the execution is
-resumed at just that point.  If this is necessary the user has to take
+resumed at just that point.  If this is necessary the user has to
 determine this herself.  This must be done carefully since the context
 contains registers which might contain register variables.  This is a
 good situation to define variables with @code{volatile}.
 
 Once the context variable is initialized it can be used as is or it can
 be modified.  The latter is normally done to implement co-routines or
-similar constructs.  The @code{makecontext} function is what has to be
+similar constructs.  The @code{makecontext} function has to be
 used to do that.
 
 @comment ucontext.h
@@ -327,7 +327,7 @@ used to do that.
 
 The @var{ucp} parameter passed to the @code{makecontext} shall be
 initialized by a call to @code{getcontext}.  The context will be
-modified to in a way so that if the context is resumed it will start by
+modified in a way such that if the context is resumed it will start by
 calling the function @code{func} which gets @var{argc} integer arguments
 passed.  The integer arguments which are to be passed should follow the
 @var{argc} parameter in the call to @code{makecontext}.
@@ -347,7 +347,7 @@ information about the exact use.
 While allocating the memory for the stack one has to be careful.  Most
 modern processors keep track of whether a certain memory region is
 allowed to contain code which is executed or not.  Data segments and
-heap memory is normally not tagged to allow this.  The result is that
+heap memory are normally not tagged to allow this.  The result is that
 programs would fail.  Examples for such code include the calling
 sequences the GNU C compiler generates for calls to nested functions.
 Safe ways to allocate stacks correctly include using memory on the
@@ -363,7 +363,7 @@ the @code{uc_stack} element to point to the base of the memory region
 allocated for the stack and the size of the memory region is stored in
 @code{ss_size}.  There are implements out there which require
 @code{ss_sp} to be set to the value the stack pointer will have (which
-can depending on the direction the stack grows be different).  This
+can, depending on the direction the stack grows, be different).  This
 difference makes the @code{makecontext} function hard to use and it
 requires detection of the platform at compile time.
 
@@ -429,7 +429,7 @@ installed and execution continues as described in this context.
 If @code{swapcontext} succeeds the function does not return unless the
 context @var{oucp} is used without prior modification by
 @code{makecontext}.  The return value in this case is @code{0}.  If the
-function fails it returns @code{-1} and set @var{errno} accordingly.
+function fails it returns @code{-1} and sets @var{errno} accordingly.
 @end deftypefun
 
 @heading Example for SVID Context Handling
@@ -437,7 +437,7 @@ function fails it returns @code{-1} and set @var{errno} accordingly.
 The easiest way to use the context handling functions is as a
 replacement for @code{setjmp} and @code{longjmp}.  The context contains
 on most platforms more information which might lead to less surprises
-but this also means using these functions is more expensive (beside
+but this also means using these functions is more expensive (besides
 being less portable).
 
 @smallexample
@@ -488,7 +488,7 @@ different context.  It is not allowed to do the context switching from
 the signal handler directly since neither @code{setcontext} nor
 @code{swapcontext} are functions which can be called from a signal
 handler.  But setting a variable in the signal handler and checking it
-in the body of the functions which are executed.  Since
+in the body of the functions which are executed is OK.  Since
 @code{swapcontext} is saving the current context it is possible to have
 multiple different scheduling points in the code.  Execution will always
 resume where it was left.
diff --git a/nptl/ChangeLog b/nptl/ChangeLog
index a4d3f45..474a473 100644
--- a/nptl/ChangeLog
+++ b/nptl/ChangeLog
@@ -1,3 +1,7 @@
+2014-02-08  Mike Frysinger  <vapier@gentoo.org>
+
+	* sem_open.c (__where_is_shmfs): Compare f.f_type to RAMFS_MAGIC too.
+
 2014-02-05  Carlos O'Donell  <carlos@redhat.com>
 
 	* sysdeps/unix/sysv/linux/tst-setgetname.c (do_test): Skip the
diff --git a/nptl/sem_open.c b/nptl/sem_open.c
index 529f636..b57e6b7 100644
--- a/nptl/sem_open.c
+++ b/nptl/sem_open.c
@@ -61,7 +61,8 @@ __where_is_shmfs (void)
 
   /* The canonical place is /dev/shm.  This is at least what the
      documentation tells everybody to do.  */
-  if (__statfs (defaultmount, &f) == 0 && f.f_type == SHMFS_SUPER_MAGIC)
+  if (__statfs (defaultmount, &f) == 0 && (f.f_type == SHMFS_SUPER_MAGIC
+					   || f.f_type == RAMFS_MAGIC))
     {
       /* It is in the normal place.  */
       mountpoint.dir = (char *) defaultdir;
@@ -95,7 +96,8 @@ __where_is_shmfs (void)
 	/* First make sure this really is the correct entry.  At least
 	   some versions of the kernel give wrong information because
 	   of the implicit mount of the shmfs for SysV IPC.  */
-	if (__statfs (mp->mnt_dir, &f) != 0 || f.f_type != SHMFS_SUPER_MAGIC)
+	if (__statfs (mp->mnt_dir, &f) != 0 || (f.f_type != SHMFS_SUPER_MAGIC
+						&& f.f_type != RAMFS_MAGIC))
 	  continue;
 
 	namelen = strlen (mp->mnt_dir);
diff --git a/sysdeps/unix/sysv/linux/bits/in.h b/sysdeps/unix/sysv/linux/bits/in.h
index 9d74066..6754da0 100644
--- a/sysdeps/unix/sysv/linux/bits/in.h
+++ b/sysdeps/unix/sysv/linux/bits/in.h
@@ -90,13 +90,37 @@
 #define IP_RECVORIGDSTADDR   IP_ORIGDSTADDR
 
 #define IP_MINTTL       21
-
+#define IP_NODEFRAG     22
 
 /* IP_MTU_DISCOVER arguments.  */
 #define IP_PMTUDISC_DONT   0	/* Never send DF frames.  */
 #define IP_PMTUDISC_WANT   1	/* Use per route hints.  */
 #define IP_PMTUDISC_DO     2	/* Always DF.  */
 #define IP_PMTUDISC_PROBE  3	/* Ignore dst pmtu.  */
+/* Always use interface mtu (ignores dst pmtu) but don't set DF flag.
+   Also incoming ICMP frag_needed notifications will be ignored on
+   this socket to prevent accepting spoofed ones.  */
+#define IP_PMTUDISC_INTERFACE           4
+
+#define IP_MULTICAST_IF			32
+#define IP_MULTICAST_TTL 		33
+#define IP_MULTICAST_LOOP 		34
+#define IP_ADD_MEMBERSHIP		35
+#define IP_DROP_MEMBERSHIP		36
+#define IP_UNBLOCK_SOURCE		37
+#define IP_BLOCK_SOURCE			38
+#define IP_ADD_SOURCE_MEMBERSHIP	39
+#define IP_DROP_SOURCE_MEMBERSHIP	40
+#define IP_MSFILTER			41
+#define MCAST_JOIN_GROUP		42
+#define MCAST_BLOCK_SOURCE		43
+#define MCAST_UNBLOCK_SOURCE		44
+#define MCAST_LEAVE_GROUP		45
+#define MCAST_JOIN_SOURCE_GROUP		46
+#define MCAST_LEAVE_SOURCE_GROUP	47
+#define MCAST_MSFILTER			48
+#define IP_MULTICAST_ALL		49
+#define IP_UNICAST_IF			50
 
 /* To select the IP level.  */
 #define SOL_IP	0
diff --git a/sysdeps/unix/sysv/linux/linux_fsinfo.h b/sysdeps/unix/sysv/linux/linux_fsinfo.h
index 1547ba8..d15d5fb 100644
--- a/sysdeps/unix/sysv/linux/linux_fsinfo.h
+++ b/sysdeps/unix/sysv/linux/linux_fsinfo.h
@@ -30,15 +30,30 @@
 /* Constant that identifies the `affs' filesystem.  */
 #define AFFS_SUPER_MAGIC	0xadff
 
+/* Constant that identifies the `afs' filesystem.  */
+#define AFS_SUPER_MAGIC		0x5346414F
+
+/* Constant that identifies the `anon_inodefs' filesystem.  */
+#define ANON_INODE_FS_MAGIC	0x09041934
+
 /* Constant that identifies the `autofs' filesystem.  */
 #define AUTOFS_SUPER_MAGIC	0x187
 
+/* Constant that identifies the `bdev' filesystem.  */
+#define BDEVFS_MAGIC		0x62646576
+
 /* Constant that identifies the `bfs' filesystem.  */
 #define BFS_MAGIC		0x1badface
 
+/* Constant that identifies the `binfmt_misc' filesystem.  */
+#define BINFMTFS_MAGIC		0x42494e4d
+
 /* Constant that identifies the `btrfs' filesystem.  */
 #define BTRFS_SUPER_MAGIC	0x9123683e
 
+/* Constant that identifies the `btrfs_test_fs' filesystem.  */
+#define BTRFS_TEST_MAGIC	0x73727279
+
 /* Constant that identifies the `cgroup' filesystem.  */
 #define CGROUP_SUPER_MAGIC	0x27e0eb
 
@@ -48,15 +63,24 @@
 /* Constant that identifies the `coherent' filesystem.  */
 #define COH_SUPER_MAGIC		0x012ff7b7
 
-/* Constant that identifies the `ramfs' filesystem.  */
+/* Constant that identifies the `cramfs' filesystem.  */
 #define CRAMFS_MAGIC		0x28cd3d45
 
+/* Constant that identifies the `cramfs' filesystem w/opposite endianness.  */
+#define CRAMFS_MAGIC_WEND	0x453dcd28
+
+/* Constant that identifies the `debugfs' filesystem.  */
+#define DEBUGFS_MAGIC		0x64626720
+
 /* Constant that identifies the `devfs' filesystem.  */
 #define DEVFS_SUPER_MAGIC	0x1373
 
 /* Constant that identifies the `devpts' filesystem.  */
 #define DEVPTS_SUPER_MAGIC	0x1cd1
 
+/* Constants that identifies the `ecryptfs' filesystem.  */
+#define ECRYPTFS_SUPER_MAGIC	0xf15f
+
 /* Constants that identifies the `efs' filesystem.  */
 #define EFS_SUPER_MAGIC		0x414a53
 #define EFS_MAGIC		0x072959
@@ -64,15 +88,30 @@
 /* Constants that identifies the `evivar' filesystem.  */
 #define EFIVARFS_MAGIC		0xde5e81e4
 
-/* Constant that identifies the `ext2' and `ext3' filesystems.  */
+/* Constant that identifies the `ext2' filesystem.  */
 #define EXT2_SUPER_MAGIC	0xef53
 
+/* Constant that identifies the `ext3' filesystem.  */
+#define EXT3_SUPER_MAGIC	0xef53
+
+/* Constant that identifies the `ext3' filesystem.  */
+#define EXT4_SUPER_MAGIC	0xef53
+
 /* Constant that identifies the `f2fs' filesystem.  */
 #define F2FS_SUPER_MAGIC	0xf2f52010
 
+/* Constant that identifies the `futexfs' filesystem.  */
+#define FUTEXFS_SUPER_MAGIC	0xBAD1DEA
+
+/* Constant that identifies the `hostfs' filesystem.  */
+#define HOSTFS_SUPER_MAGIC	0x00c0ffee
+
 /* Constant that identifies the `hpfs' filesystem.  */
 #define HPFS_SUPER_MAGIC	0xf995e849
 
+/* Constant that identifies the `hugetlbfs' filesystem.  */
+#define HUGETLBFS_MAGIC 	0x958458f6
+
 /* Constant that identifies the `iso9660' filesystem.  */
 #define ISOFS_SUPER_MAGIC	0x9660
 
@@ -95,6 +134,9 @@
 #define MINIX2_SUPER_MAGIC	0x2468
 #define MINIX2_SUPER_MAGIC2	0x2478
 
+/* Constants that identify the `minix3' filesystem.  */
+#define MINIX3_SUPER_MAGIC	0x4d5a
+
 /* Constants that identify the `minix' filesystem.  */
 #define MINIX_SUPER_MAGIC	0x137f
 #define MINIX_SUPER_MAGIC2	0x138F
@@ -102,36 +144,76 @@
 /* Constant that identifies the `msdos' filesystem.  */
 #define MSDOS_SUPER_MAGIC	0x4d44
 
+/* Constant that identifies the `mtd_inodefs' filesystem.  */
+#define MTD_INODE_FS_MAGIC	0x11307854
+
 /* Constant that identifies the `ncp' filesystem.  */
 #define NCP_SUPER_MAGIC		0x564c
 
+/* Constant that identifies the `nilfs' filesystem.  */
+#define NILFS_SUPER_MAGIC	0x3434
+
 /* Constant that identifies the `nfs' filesystem.  */
 #define NFS_SUPER_MAGIC		0x6969
 
 /* Constant that identifies the `ntfs' filesystem.  */
 #define NTFS_SUPER_MAGIC	0x5346544e
 
+/* Constant that identifies the `openpromfs' filesystem.  */
+#define OPENPROM_SUPER_MAGIC	0x9fa1
+
+/* Constant that identifies the `pipefs' filesystem.  */
+#define PIPEFS_MAGIC		0x50495045
+
 /* Constant that identifies the `proc' filesystem.  */
 #define PROC_SUPER_MAGIC	0x9fa0
 
-/* Constant that identifies the `usbdevfs' filesystem.  */
-#define USBDEVFS_SUPER_MAGIC	0x9fa2
+/* Constant that identifies the `pstorefs' filesystem.  */
+#define PSTOREFS_MAGIC		0x6165676C
 
 /* Constant that identifies the `qnx4' filesystem.  */
 #define QNX4_SUPER_MAGIC	0x002f
 
+/* Constant that identifies the `qnx6' filesystem.  */
+#define QNX6_SUPER_MAGIC	0x68191122
+
+/* Constant that identifies the `ramfs' filesystem.  */
+#define RAMFS_MAGIC		0x858458f6
+
 /* Constant that identifies the `reiser' filesystem.  */
 #define REISERFS_SUPER_MAGIC	0x52654973
 
+#define REISERFS_SUPER_MAGIC_STRING	"ReIsErFs"
+#define REISER2FS_SUPER_MAGIC_STRING	"ReIsEr2Fs"
+#define REISER2FS_JR_SUPER_MAGIC_STRING	"ReIsEr3Fs"
+
 /* Constant that identifies the `romfs' filesystem.  */
 #define ROMFS_SUPER_MAGIC	0x7275
 
+/* Constant that identifies the `securityfs' filesystem.  */
+#define SECURITYFS_MAGIC	0x73636673
+
+/* Constant that identifies the `selinuxfs' filesystem.  */
+#define SELINUX_MAGIC		0xf97cff8c
+
+/* Constant that identifies the `smackfs' filesystem.  */
+#define SMACK_MAGIC		0x43415d53	/* "SMAC" */
+
 /* Constant that identifies the `shm' filesystem.  */
 #define SHMFS_SUPER_MAGIC	0x01021994
 
 /* Constant that identifies the `smb' filesystem.  */
 #define SMB_SUPER_MAGIC		0x517b
 
+/* Constant that identifies the `sockfs' filesystem.  */
+#define SOCKFS_MAGIC		0x534F434B
+
+/* Constant that identifies the `squashfs' filesystem.  */
+#define SQUASHFS_MAGIC		0x73717368
+
+/* Constant that identifies the end of stacks allocated by the kernel.  */
+#define STACK_END_MAGIC		0x57AC6E9D
+
 /* Constant that identifies the `sysfs' filesystem.  */
 #define SYSFS_MAGIC		0x62656572
 
@@ -139,6 +221,9 @@
 #define SYSV2_SUPER_MAGIC	0x012ff7b6
 #define SYSV4_SUPER_MAGIC	0x012ff7b5
 
+/* Constant that identifies the `tmpfs' filesystem.  */
+#define TMPFS_MAGIC		0x01021994
+
 /* Constant that identifies the `udf' filesystem.  */
 #define UDF_SUPER_MAGIC		0x15013346
 
@@ -146,9 +231,19 @@
 #define UFS_MAGIC		0x00011954
 #define UFS_CIGAM		0x54190100 /* byteswapped MAGIC */
 
+/* Constant that identifies the `usbdevfs' filesystem.  */
+#define USBDEVFS_SUPER_MAGIC	0x9fa2
+#define USBDEVICE_SUPER_MAGIC	0x9fa2
+
+/* Constant that identifies the `9p' filesystem.  */
+#define V9FS_MAGIC		0x01021997
+
 /* Constant that identifies the `vxfs' filesystem.  */
 #define VXFS_SUPER_MAGIC	0xa501fcf5
 
+/* Constant that identifies the `xenfs' filesystem.  */
+#define XENFS_SUPER_MAGIC	0xabba1974
+
 /* Constant that identifies the `xenix' filesystem.  */
 #define XENIX_SUPER_MAGIC	0x012ff7b4
 
diff --git a/sysdeps/unix/sysv/linux/shm_open.c b/sysdeps/unix/sysv/linux/shm_open.c
index 5f23515..fef8fd5 100644
--- a/sysdeps/unix/sysv/linux/shm_open.c
+++ b/sysdeps/unix/sysv/linux/shm_open.c
@@ -62,7 +62,8 @@ where_is_shmfs (void)
 
   /* The canonical place is /dev/shm.  This is at least what the
      documentation tells everybody to do.  */
-  if (__statfs (defaultdir, &f) == 0 && f.f_type == SHMFS_SUPER_MAGIC)
+  if (__statfs (defaultdir, &f) == 0 && (f.f_type == SHMFS_SUPER_MAGIC
+					 || f.f_type == RAMFS_MAGIC))
     {
       /* It is in the normal place.  */
       mountpoint.dir = (char *) defaultdir;
@@ -86,7 +87,8 @@ where_is_shmfs (void)
   while ((mp = __getmntent_r (fp, &resmem, buf, sizeof buf)) != NULL)
     /* The original name is "shm" but this got changed in early Linux
        2.4.x to "tmpfs".  */
-    if (strcmp (mp->mnt_type, "tmpfs") == 0)
+    if (strcmp (mp->mnt_type, "tmpfs") == 0
+	|| strcmp (mp->mnt_type, "shm") == 0)
       {
 	/* Found it.  There might be more than one place where the
            filesystem is mounted but one is enough for us.  */
@@ -95,7 +97,8 @@ where_is_shmfs (void)
 	/* First make sure this really is the correct entry.  At least
 	   some versions of the kernel give wrong information because
 	   of the implicit mount of the shmfs for SysV IPC.  */
-	if (__statfs (mp->mnt_dir, &f) != 0 || f.f_type != SHMFS_SUPER_MAGIC)
+	if (__statfs (mp->mnt_dir, &f) != 0 || (f.f_type != SHMFS_SUPER_MAGIC
+						&& f.f_type != RAMFS_MAGIC))
 	  continue;
 
 	namelen = strlen (mp->mnt_dir);
diff --git a/test-skeleton.c b/test-skeleton.c
index b08cfb5..d7d2f75 100644
--- a/test-skeleton.c
+++ b/test-skeleton.c
@@ -18,8 +18,10 @@
    <http://www.gnu.org/licenses/>.  */
 
 #include <errno.h>
+#include <fcntl.h>
 #include <getopt.h>
 #include <malloc.h>
+#include <paths.h>
 #include <search.h>
 #include <signal.h>
 #include <stdio.h>
@@ -194,6 +196,32 @@ signal_handler (int sig __attribute__ ((unused)))
   exit (1);
 }
 
+/* Set fortification error handler.  Used when tests want to verify that bad
+   code is caught by the library.  */
+static void
+__attribute__ ((unused))
+set_fortify_handler (void (*handler) (int sig))
+{
+  struct sigaction sa;
+
+  sa.sa_handler = handler;
+  sa.sa_flags = 0;
+  sigemptyset (&sa.sa_mask);
+
+  sigaction (SIGABRT, &sa, NULL);
+
+  /* Avoid all the buffer overflow messages on stderr.  */
+  int fd = open (_PATH_DEVNULL, O_WRONLY);
+  if (fd == -1)
+    close (STDERR_FILENO);
+  else
+    {
+      dup2 (fd, STDERR_FILENO);
+      close (fd);
+    }
+  setenv ("LIBC_FATAL_STDERR_", "1", 1);
+}
+
 /* We provide the entry point here.  */
 int
 main (int argc, char *argv[])
diff --git a/timezone/Makefile b/timezone/Makefile
index f5fb424..6c640fd 100644
--- a/timezone/Makefile
+++ b/timezone/Makefile
@@ -44,10 +44,8 @@ include ../Makeconfig	# Get objpfx defined so we can use it below.
 
 CPPFLAGS-zic = -DNOT_IN_libc
 
-ifeq ($(have-ksh),yes)
 install-bin-script = tzselect
 generated += tzselect
-endif
 
 include ../Rules
 
@@ -113,7 +111,7 @@ $(testdata)/Asia/Tokyo: asia $(zic-deps)
 
 
 $(objpfx)tzselect: tzselect.ksh $(common-objpfx)config.make
-	sed -e 's|/bin/bash|$(KSH)|g' \
+	sed -e 's|/bin/bash|$(BASH)|' \
 	    -e '/TZDIR=/s|\$$(pwd)|$(zonedir)|' \
 	    -e '/TZVERSION=/s|see_Makefile|"$(version)"|' \
 	    -e '/PKGVERSION=/s|=.*|="$(PKGVERSION)"|' \
diff --git a/timezone/tzselect.ksh b/timezone/tzselect.ksh
old mode 100644
new mode 100755
